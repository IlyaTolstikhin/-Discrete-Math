(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     78532,       1683]
NotebookOptionsPosition[     74037,       1610]
NotebookOutlinePosition[     74464,       1627]
CellTagsIndexPosition[     74421,       1624]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\:041b\:0430\:0431\:043e\:0440\:0430\:0442\:043e\:0440\:043d\:0430\:044f\
 \:0440\:0430\:0431\:043e\:0442\:0430 \:21163", "Text",
 CellChangeTimes->{{3.814307625504524*^9, 3.814307640780676*^9}},
 FontSize->16,
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"7552e046-f15e-4263-8f0c-e1926caec1c0"],

Cell[TextData[{
 StyleBox["\:0412\:0430\:0440\:0438\:0430\:043d\:0442 \:211616. \:0422\:043e\
\:043b\:0441\:0442\:0438\:0445\:0438\:043d \:0418\:043b\:044c\:044f, \
0\:041291\n",
  FontSize->10],
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJztvTtvLVG3lrm6O+nw7IyAgNYm4AfsAFkkHVmdAq2dEADiGLaETqNDS622
kIgtEiefcNbh1hEhx04IOJL/gCVCyyIgPJYI+AHVY9XrNb6xxrzUrOXL8uV5
AsuratacY97fmrf63/7p//X3z/7nzWbzr/9X+/P3/8n/87//+Z//k//3H/yJ
/fg//+xf//rnf/an/+z/+LP/+0//+Z/++d/9p/+LXfz//qfN5h/YP9v/JwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAID3xO3t
7dXV1bGtOD4PDw8XFxffvn07tiHH5v7y7GSz5eTyfv/GzdnJ2c2RrOpgBp/d
3C+7+ww8Pj7+/v37+/fvVm2PbcvLY7Xv+vpa/9/d3dlP+7v4lDVfI876KGEv
dvz69ev5fr4NNOAA0KGlbayJs4buAA/Nt02DD6eg1J+a5cc25KjcnJng28qo
+8uTqPy2ou/k3corM/YdW/eSmC76+fOnldLPKvwMa6ZMhp2enur/jntzZqnx
fIUmkRmbr/cppV68AQeAz401Dmo0qtpGL7kHeGttkfRS7Imse/pwwm/a6dhj
W3E8tmKvGOfbspWD73GsL/IRbHwRrKJ9VuFnbdSPHz8kvUYUnbnxEcKDMfVo
jZXV/dsZ+/lMD1+JV2rAAeDTY+/RLW1j+u2wVlR+pp7o/Pz8EPuOyhcXflvp
VNNOH0VSfRQ7n8knFn6r+P37t6nE5/tjtf59ju9VeY0GHAA+N512w6SaNR0H
+/kJeqKvLPzm0b7acF+a833PfCBTnwHCT2iY7vn+WPP1fE/ejNdowAHgc9Np
N+wN+rAOpSP84iJAb2D9otrt1ipBOX58fLQGTRMc9oKvUNT3RazFi73A3d2d
rNJTnRdh8//Xr1/yQaunLDj91EzTYhSiGWZYcp9MtZ/mrSbHzarS8+TYY6Gw
km8yxvzxCbL47FjuSfEF9gfN5kV/dTF1Py/8c/dPm0IGlNf9jTk9iSsItzYs
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
/Fm/YkF4sxkbxr63kVjrndRYTUWN6/QdiVjdYqoqFFVAxUK7bqXTvGWoJrJu
dboMC1SvErG+2F1LlsVAVWYUqP73Eljtv/y9oFwgqixWCpt7tUiyM7VOymi/
qBasmp7wObAy4OWqOu+mEarDhuJVnPztw6p/HAxJY26xWvWtkvrS/2pt/G76
mbrO2DioqsqlqkbUlklApgYw+rmYgGV73rrYIQk/H6KJL++65Y+kpJiKfrNs
1Tf7L9Sb/Tdx+9/DSneVs+6y2hU6dt1byJRi5a1BA8roxOibbWncZlXco/Iv
PVdk40RJ0o2JlC/9klAVfv5sp+x1op+W9KgbStaWVT7qxmk3hNiZHkqJoBAl
ANQCXM3ER+xuVFllKeoLv6l4DZzG6oi3SOVLrpndafok/KaiudBQm3uYxlJa
WdYSfv5Toej/fiamWKRuXY5H2pDWWh2P5mb/1VKDb4vepjQs28xpqeR3+o5F
/5PPm92wqn7GseJOIve7DA3NddqETqAKJb4OLPZfktkxUpp/iSngyVXtzWWA
p5K0ZZmY8MnQLImGkRfr4DidTs2nfhIx9I5VI8JP779V4/X65tfLpSwyL80r
TWGmpnxFbZn6IsLPq3y1ndQUjBLQLz5T+E1zsqSX39RFynH5oHteTmLqPcKj
0+/7Bg2oPuvRV+IkM8aFn4XoMzKl51MjRzbzK/xUI7pX690ZTu93f6Ja9jrR
97nUyOLaOZ9jivQX6/rIp6/lU3zVIfrgrVCNSx6m034W7WypiKlbR6KbfqFK
uPBLGlVja1NN+IlqllWFXxm7mDKtTOzHolphq+nTF34dOdf3tvRwlfAb6Tuq
D1Z9TkkRu4xOIve7jGqkNqFN6ATqaNS6VX7SK4lqlvdKGrJ2xxpv1JWqh52K
A58SKRlrsqyYxTfBSLWojNBpNquDY+NWLQo/q4aqBaXxchNX71Tt3BTCzymX
I3ZM7Qg/oRUg/RVTrfhKkxgWdHU0o9U1lJESZXPkb7hRP9wWK9BSP9JqSaoS
q9X3rTJAVKN/sPCzzNWoRVX4RUYyvfrsaXcV2aYrbDplrxP9OIYwGO5UdFUj
+KignxXmU3ilHK2qkRTfqlWLwm+xjnRsGBR+Uxjw0cxm9DBa2MmyVcKvn4n9
WKRodtLnOcKv423pYbXTKfGZ0+ojVdYKv+igk8j9LqOcX552w5KLgU67NX6q
NaUNZf8lvs9Mu7n1eMtXe3qbkyxH+H0pNIfVn6mcXnPEL00VaaHRolUdIaSf
1ln3R7a162qze0WqDk9t9hdXeETMZr1ATWMJuDjil9aHlFiIblt68329qV6h
VNIxubGdKUf8Uj+u0KuSZhPGuBZnu0YMqD7r0de7eRpVGxF+9oin7eKIXyrJ
p/NSrjLu6dnbedFU59jhjrDpl71O9O1KaVuyv6w1ej3pP5VwmRfL9uluNXsa
M7/dX84UY+GF/wDhN1JHkg2HCT89q0X+nixJ+PWzbO2IXycTx4VfP31GhF/K
R19W+npTvZ2+Y8T/EeGnPOokcr/LiCPbjmW9+9YJNE0iV8Vn6r/cMPV9PuDs
qOBpjB3hB7dhHenU0C3eCR7g/+n+2pKEZoLSMokRq27nnXT6vyX83HFLtcbR
9XJRltqWVpvsb6kjCbgo/KbdFuBqKk1hgd9UkxxJE1ZdVpNiRPgplXyddtWx
GpO0naGzOCoqgZRi5W6yEQOq0fHo+0HiMSlGhF8MsSP8yg0aSpDW+Fi1xLYc
d7q/ftnrRL9cDG9FKC23K2uNBGTsUOyRxZPKNMoRPVddq6pi1YKogdNBHwcI
v5E64j+fI/ymoGmTh25hP8tWCb9+Jo4Lv3769IWfb52LJ3WPeBuJW70W4+5p
1eo7SkaEX6zpShzZ00nkfpdR6qvUJnQCPZ3XB/qt1qhjdXZYa2jLRSZxt121
Q0w9tVZJlYHC58BrrnVe2mMujRffI9SvHXCGs/c4rW/+qu5oJOFiPoxFoXSs
0la1+HGftKy6s6tXb0m+HzbuJ532eyitoIibOuMo/e1u26Y5W0zAcgNp6WHn
sC/ZGRM/Lqr37XtSwqq82rg3tXf1+qkC1V29ZfuZ1v0K35gWn4173FKzXD4r
w3wb5tTY39cyoLWr19M5Rt9Lmu9kTJs1Uo+/uKtXJsUVNXKvRdH2T7lvzonT
QNW9q07KsmmnvharyWD0tanQHkllrwx3Cl/f0EkUaa9HCwWdCr9vAUioYLRK
keIbVwb6IFvabR0979eRNG7j+x/d1FKLxoiczrss/UqpGxW6D1b3s8wPP9QX
VH3dYMr9ON5bzcT02uIuPZpRz/TTJ5lUeuXnzMgGt7bvbaQ8zmUKJdCvpIa9
1XeU9M95mHZL72J9TCO0rZrS6TKmneBstQmdQJXLeqdQkppLi91f/dVfdfov
oRpUnbXxAd6yak/7b9xy02nA4RPgXx2yAiypdhp2G02HHuAcVxSIqjM/6UiL
XhatUhn2OhL9v9g/x8+H46IBj7sPem6KU6cew3lN6eTATUE8W6mTgMmAqtmb
7slvZdAxvup6ZPDtfGzUZtfrxaS4WH+OX7RB06zxStWxZ+XmJc7xW2tAik65
oMXXaaekiFgo+qJ6TLq+53HkWSJh7Tl+5aSnKLOsDLdV9vrRn/Yrgp/zUKbt
Zr8T8UP2WsqtxE+DiXRWtN7uDgzZ7JeilBopFxTN6iqmTh1J0UwRL0OMdpaO
dT0mZsrofpZNu3L+bfedr44xPtJeZmIyrIxmSqVO+iSTpqIieFK4DZ6tfW8T
aVx3pORP7b4jstgMTrvBN7ksjwTs1JROlyEsi1ttQidQpflmt4pPQSiCnf7L
SetG4ih0NfpTcYCzXvGqMYKvw3M+2QbPRO966aKGLt+sVr7qx9Ork+NvaYCj
haOHrWWFL8e/+3fTX//10///439M//JfTn/rb03/6T9xpXnlb/7N6d/+22pa
Phz1k22b9kKLDxeodRatKe8O1U+2mVetqTr49KStlPDGdMZV3qax0mzX6/m/
KPxe24AEbR0M8a/+1VbMiH/xL6Z/+A+3Oudv/I2tyOFK9cp//a/T3/t707/5
N9Xk1Gzyy2XPCj6T8Ds96APBP/a/GyLS8CZ8HawwHKsywnHxFfit6deXorr9
7S0NADiEv/7r6e/8nenf/3t7dZn+5E+m//7ftxf/8T+e/tk/m/7zf+ZK/Yr9
/dt/e/oP/6Gaom8zsJ8ol/x9uEB9+1s6RX8QS/ak+vTxFzZ3fE2sMNDhfll8
mcerloG0TOvtDQA4nP/236Z/9I+2c5r/8T8+XTFhY2qHK60rxn/5L60J32me
XnzLZUWthZofK1DtQBlfdhtB4AEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAMAqHh4ezs/Pv337Vr17e3t7dXX1xiZBC8ssy46LHT9/
/jy2RfDCWBZbzrbq49fi/vLsZLPl5PJ+/8bN2cnZzZGs6mAGn93cL7sDADgm
19fXp6en1ri2HNzd3f369estTYIqv3//3gRMG5gsP7ZR8MJYLn///r1TH78K
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
I6keMzZ9WoXeD7QVdHmx3HsilIzVNX7pltC4QTmwsGrAUz6kjFsUfnGutiP8
ys3d1WHSBXribmE8bxZiB4357QJdMcnbmeLNvq6gmrzVBEzFWD89K/tlfpqL
pUv0xRqhQbbSBuV4dY1fvFUu9dRCjrh1N5Zq13gelylsRJI/VYHUqiNyPzjV
m5qdwTV+024AsOpSE8Gx3tmVKGjTkt2qJ/HjPoe1adVbrcwt53mrPMz03QDA
J0CtkzU+qvJqb9OJzer0V53hbE2Qr2f2sTItLdvsDjqwsPzkE3meuhV3rJ+L
O+D8U0rasHa6+95oP1BR3bwQlV6MRRlfX3TtRvpEVXWQsOw+pvau3urGWzn2
u3FnokidYH9X77Rbh5/CirsX157y2hdL1bPxthfPbu53429PO0Dut1t7/f7C
lg+NzZ2VWq7x7P2+y/vq2N9qCZr2znSGi6f9CcS0VXaxzGtzt3ulquo55TXC
yvzF/Amezs5W370re1S00q5eOYsb9u1/rzUSLb59VXddw2gXarlJJI1wOmUd
scctvt5YlYkTN+TGCtsXfqnuKIX7w7Nxw7vv6tWDWhCi9kftgJb82T+KS9wj
f3CbtipzW2+sETWSHhcA+NxYUyMNoN1zaudjD3XYAc7WksdTxbw90QCC3uXV
j9hdP5VOXCwdZDftr+fxRtv3LKiPiFGoBqq7m310sVzzls7siiye41emedJR
q6KvpXrKtU1xEF9E56rFtFLHEd2kx2935/j56WEHneO3dAJKTfk9qTZfbDfv
7Q2//WzAjghrhVt9tjzCr/XounneMiNahadc2BlTO5WBVObLIhrvygc/dC7q
tyqD5/jFs+PiUXVTmBrw4x/TMLsXMEPepmIfAyrriLyN6wmjn60Kqw+Ot7Kg
rDudQxf9EW/Zop/eiGkVn0R4nAjwCuv+9/PXc7Dapo1krjR86WeJWv6DajoA
fEL4ZNsqOlM8jo8YvCrqF47Tkg985+zgT6H5CODqm4u3a2gccuVDb4H146YE
kkTRKrKDV+SKUoaNUF1EcTBvU0cgYu38x/0gHQC8FPbOyJccV7Eo/KxnXH0u
yjM4Sktuom5gjEzSb+WRLb3Ve/29uSuPdxHv+Eu9nRG8Z6r9owu/N64jIPxL
KwDwZbm7u3vOno6viSZfysEKX5X3WRfSPK3Qm09fPhnVSjfzR9YGxd92BV7p
9mkmdnuzdyJL9dml8OaYfKWv9E6Nvasj9D+QMcKnryPvFu0NZ4gV4ItjDe/6
LzV8dToranzN/Gft0Z4+t7HdQLFKK22fe86Y2m4/x0vrs/vL4e/FfR7SmsPx
4bu0xO6w0D99HQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4G25vb6+uro5tBUx3d3ffvn17
eHjQz9+/f9vP45r0nrHk+vXr1+np6bEN+cjcX56dbLacXN7v37g5Ozm7OZJV
Hczgs5v7ZXcfHor3CNfX1xc7zs/Prc08tkUAHwY1Mse24qtjuWA9sDX1j4+P
Jv9M9f348ePYRr1TLH2skVdyHduWD8vNmQm+rYy6vzyJym8r+k7erbwyY9+x
dS8DxXsRayStedwEfv78eWyjllG2tiC74Y2xNya039GxZuH79+/WApjqs+yw
xu3YFr1rTmeObcXHZCv2inG+LVs5+B7H+iIfwcbnQ/HuYCljSu92xmdJPgqS
eemitfyMWMLbYwXv+vr62FYAjELPeDBb6VTTTh9FUn0UO58DxbuFib0PMb5X
xWSq1b1ymIWBFzgK5+fnpv2ObQXAKPSMhzGP9tWG+9Kc73vmA5l6KBTvFqaR
Ptwon6PZXtOuxzYEvgpW2LQu4tu3bybz0kziYQXS3JtvvkohTlDaP/ZT101S
Xlxc6Lq1Zp11DtNuJFyY//ZguQrCKr55rqDt4t3dXT9Qv5i4vr5O9vTjK2Ms
XDXLmpk1tMA4eW6pnQZRzY0ekW2eViNR1ntuSufxeG3mZTCeUEpD99D+UVta
Bp1si96aY7sSHVQt94spiVTYLCIpWTrpb/bLAPv7Y8Z/KkGSeanI/eEPf4gG
lO6ThdNul4323fTjvpiPpftUkssC46Rn7aclhRJteKBeii+wP2g2L/qri6n7
eeGfu3/aFDKgvO5vzOlJXEG4tWFxsG4ekeyYOuLPYvl3Utpu2u1VNdPdjT2l
ZsGbRC/h1t56Fnfa2MXi7VRbEvtrxdWiaVfcK/PEY+1ml+2Sp08qZunBab+J
iJTVxx8vq1UiedVf62J2qp1v1RoLTreiP62uarHFm4o2KgY3nrlCmRJNjY/I
q48ra+G9YWXViqVK1NXV1aYYbVaDZgVvlbeqTSq68sEH4aWLHmckMLz9kVyJ
BV61Rv/7wl0v/zLYbdPeB21Gtv8tFPvp/X41UHs2Chs3WJ7InsEOVOJH/8s3
f1DiWV2G+mU3bJrbq5QF41G2IFI6y4aReOmi+bDZV85mnrs3z328V7HwoN02
j0hKLk1eeFxS1ISFK5NK39TBxWTpDHSYkebYntUmaPtpD8pPhejKP5VkLwnJ
2jI6ir7XDjPGvFJf4459NU7ybaToRvcqyeqD3PKW9PVn3RJzGd96BmnM87al
1B9l2FbB3QxvrN1/7imUm7NF5We6MkrK+8vLSoAdmep0yn9Caau7/kLkDVTK
dKmjVMIle/S/OvdYwr2xSsUjsVi8RaslsSuKppU3u2L2KCKuJeSV3ltjuLJK
VcCNjO2hJYXaVf20pPDIquXxxEmth1NNNMcrzrRTWa2KoBclc5xqjRugZ1Up
9L8Sv9NVpSpvfkrjxRz04FLZGM/cqZjnVapGB6mjBHgm6T2lLKJWpPt9bhUr
unFJamxSLAivWapo6QUwCb8YdHotioJqmtvh2IDEt6ROoK2gWxc7JOHnDyrE
1CTqrqIQa3Rqr/pRtuyLbWnqCAbjFYOw0KOH9r8bk2JR2jaSfVHxqiGt+qZo
xnKYkiUix16M41xYvGXBpa4tLQpK1nYy8fdMJ0mrce/kY3JvkU0tv3qcVt8R
xcmhi4J66/s6SkqKbXNytnKCVcOMMTzTdSuW591cNgYhW9tTAp3yX7LZH11v
VeRpXyU6GuAtA7ICEKuqhFk17waL92JLstkfIVTV9squF5lYxuxBXWm1Y0qB
eOqXtFk1ccpnqylcknKn5Ti9pYpYa9QdRH9kTKerSjZHFTrtEtzTUznoeTGY
udGrSOmY4T54KdIAvpN0wgHCL2Itg9WmNG5mxdhHwg8Tfma8KpRXzFbD0g+0
FXTrYgevrZ1GTw2UNwt6lYue+Pkti1GuKtjEYrzS0FOc9XBicM8RfoqahxXH
B5JvZV+cXsYjqcOKPWOyWZH1omj51bG2lYma2002PLPoJvdljYtjFCXep/vU
/Gpaum9ZSI1IreXH0nDegrGXly2NuFb4pfJfEkW1hsU8haM/DzNV4Vd9ifPV
FJFqMztYvBdbklTekrX2Txp3Uu1IpdpCiSng48wxbcvEmV5C+PkgXnUKJs53
RGNSrTFP7KcEYWlM6qqizRpuTW1Uy+zxzE1xdLPZyQuvx4hymJ4n/DbzhEKq
ehrQsLKt7u8A4WcPWjVMjUlH+HUCbQXtFx0dFNCKqTWG/UbP8bnUqTHasKkJ
vzLKzxR+sUXylryThuWSJ9HyttrcqelWcJqx8lvl4qtOskRSGnaEnwLVsIAm
tZP/JdVMrPZ3zym6ZeilfuhkjT9lde2w+aCW7hsRUmPr8/oe35w1pVz5YG2K
t+5tnU75L4kuU1PmmS4lP9WKqDU41crekQ2JweK92JKU5Wez385MO10nkWMx
LVuYKA4tauXA1GAbGBfgtep1jL5TrkKPhiV/0uuV1uPp3a2aGil/PXklF6fh
HBzP3KmY553mhGV8D14PvRKmlwsrci874qd1aL7U6vlTveo6p6I33BRrRSw4
c9wPtBV0uqiRus4KW0tG73M7b7u+UkjtnmKUOuvN/pLIVpRva8svb/cPsBqJ
VxzH0NKyMmplak/rR/ymXStnsSt7jXLELyX1pjFdonC9O+gLP82qWDNuXqWS
vxkb8asuVnxm0Z2KPjqJUrlvjQNsdluZNmHh1hqauq9768nB5dny+ry+x615
22pofadrR/xS+S/xfPE1Zl7jfECpo2Fi9UwjfuVpCdX8HSzeiy1JVerEdmYK
xUxL16pNpd7dtFY5Jdriy6+vc9acqe6OCD9Pn84J9uVUr4SfUlUv/nHfXPka
FbuqKTSwrgbLNqrcCzmtydxp1yIxxAdvicRMWhkSHVTVxVp8NbV883p0mPBz
a1PvKUEVa1BsvlqBtoIuL5Z7TyIjmiH+lPu0fnjaqfE0StCKcso+DWyujVdc
Ml2moaVbS6scIPw8GcuxqeibprdiWNVx2niruggq3RLaXFN++W5Q+E27pbBp
sdNzim5yH7tFT5C4PLJludJt9WtaT9wtjOfNQuygMb9doCsmeTtTvNnXHp3y
X5LSczMTH4xjRMlxWnIZS3i5k06DbKUBg8V7sSXZ7K+USK8S7qeGxNXgV5tK
vbtZaSzXXdyGBY39NjCucR0Xfv6z2g6kFYnTfq1J0W/leGzky+Ul/RzUdFL1
VitzywhW0Rhs3w3AOKqAGue5mDcDpl6y2nUuYoVcI+pTGCtT6d3sxvl1woBU
pfzv75Jb3BqpLW+qcYqLv2B2AhXVvQOpEfBYpMhKbkXf4p6Iab+VK7eXKlJx
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
1MKkt0Kv1N54Vtd+AABMr7a5Y6Spj425d2dTsUBI2N2WitBP3VUzG7WNtYHq
fWJP5DakZUix8zp4qtfnrEviiqz+Gr8YKQ8lmhpvaQlQOdWrPiIqYYt+vxOf
dsu/PaG0gFz/a1pZ+wsWhZ8m3aqxG0ztBXribmE8bxZiB4357QJdMcnbmeLN
vvaQ8Jt2asRTL+ZCWg07FSe0L66mK6tP2k7SWuOX1IiZ1ymxa9f49a1Sc+E/
+8IvrllNwq/c8aq2SG868fq48PO1xNGeEeHXqh2+XyMu80sHFMQ6vim2iXFA
K8BXxloMKaU0vDbtJMrBy4AXN6apKVO4flZD3La22R0korvlJjhfxxL332k8
Ss3mxbyBNzWJvj83rSQc2Wfqq6xjy5mWXsvb6iu2gtAt97+6qzdGyjw8nT+k
krbx+s+4MzF1Cm6b/b2YtwYkw0qd4Bd13M3FfDCIrHLf4kLE6q5e36zd2mz4
Irt6+2Kpejbe9uLZzf1u/O1pB8j9dmuv31/Y8qGxubNSyzWevd93eV8d+xuS
oJZcvm3W6065bVN5FDfYxnSu7p8thb2PPMdDTqqPCN+c5buJ47tDaw+sHD/T
qrW7emWq7vpxLtP+rt6I2qIkI/sxmvY36nqFUoKU6+6S8FusHX4ElmqoJ/u0
tKtXP/l6L8CXpVymEhu35xzgHNe3tI6isusKQhf9wD3HD6rSSGBSjBHzJzbX
fp5YPKlvCmNo6VC7ZLAUVGlwSi5vt5MxydoUus/eJv87kVIvkA6BcRv0Uw17
slDhxgPQ/MiXakrG3LeglfgxleRMSVpmcUTZWk2ii5nF1B5g6QSUmvJ7Um2+
2G7e2xt++9mAHRHWCrf6bHmEX+vRhXlezyylqv31Qdcyx1vfL0vpXM3EeAxm
qllTt8xofYKux1MoF1uD51gVH/eU8Sud5b79c/wimudNj/djVC64deP/8Ic/
bBqorg3WjovdUY32lCd1DFf7SuKz0+69eNVX7QDgi/AGn2xb3Hfw4vQXRcMH
Y+A7Zwd/Cs1HAFffXLxdQ+OQKx+CF2BxK9M0j/i9wYfL9br6NnpM8whvEBAA
fCC0dPxVg0D4wXMwUTdwFouk38ojW3qr9/p7c1ce7yL4Uu/xWBR+mmZ9M3ve
Ro+lkX8AgN8zrxrEc77UcDD9lT/w/nlaoTefvnwyqpVu5o+sDYq/7Qq80u3T
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
DRexDLSW0U5rSlcZi+oK0rjZX8LPjfR2IPrZbx8SaseihTFHpl39iqkhYZ/S
RysfWsJv0aRWeo7U9E6B6Qu/vlXdNzsAeDvU3HlN98Pnoxttu1h76GhaRK2d
fVGoqA1R0H7ag9/1M16049g36mppSmxD1HzFbXqb3eSpTiCM/YtvTIs+SCnp
ZV9qyoJQO5wkWXpNHtk1WW5LTN76iF+1N4n7U5Sk8iru6o0os5JXrV29bnnc
nSef493qns2kWjv7LmWSm+qxUBZIA/QX+PXFUvVsvO3Fs5v73fjb0w6Q++3W
Xr+/sOVDY3NnpZZrPHu/7/K+OvY3JEHjXs7+gHDc1TsVu1b75XO8KqU6WLIY
kKy6DRtX5dhyX3Wtte304F29bqpqdNxTHH2zn77B3JujZH+nfUj4uTGuf6pf
7tDLo6/u8BpnT13MX0pKlaUcD2yZtJieIzV97a5e97yTUGo52eQLcHTigo3T
2ilP4oADnKNXp43ztTSJqaZmE06vip6ozTRn8f23hSuTi91ZUsnP9LhLF/90
ptZHaT+FhVgG1zon7XamTL2UpHG6MxKPByxZPMcvEbeflMElyy9mkgNf2G+3
qqt6PCmi50rPjuee4N4/bobO8Vs6AaWm/J5Umy+2m/f2ht9+NmBHhLXCrT5b
HuHXenRhnjdlR794lPni6dkvn+NVKdXBkpTj1YoQz6mLxxJKOVgQ5cl1p/vn
+A2WrmosfK9BOlzOfXPPddJUsr/VPrQyzitgWXfk0pNiE8ZXdTG+zaXUiGG1
TOqn53hNrzZoKW3LxO8k1GGjBwBwLF7pk23lGr9FbufPXJZNrl2pHpD1+dgs
LZtpnRD7slirrkb+tQPaMvCds4M/heYjgKtvLt6uoXHIlQ+9ClQlAACoEmcN
XpbDhF9LguoV9SXsetcsCj9L0qUBtBfjbSZuTNQNnMUi6bfyyJbe6r3+3tyV
x7uI9/SlXqoSAACUmIRYu6djkHLJHyyiJTelDtfyJB34/wbDfW/A0wq9+fTl
k1GtdDN/ZG1Q/G1X4JVun2Zitzd7J7JUn10Kb44JX+kFAID3ilaMvIbPafUI
W/5HSOtz4piMnxb7Sir97Xn63MZ2A8UqrbR97jljarv9HC+tz+4vh78XBwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAb8H/D8ZYago=
     "], {{0, 249.}, {510.6, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->120],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{510.6, 249.},
   PlotRange->{{0, 510.6}, {0, 249.}}]], "Input",ExpressionUUID->
  "b474a5e9-ce3d-4c06-a3d5-ef89587ca4e3"],
 "\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
AL0Bp1MSrtL8H5pjNRE=
     "], {{0, 25.2}, {492., 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->120],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{501., Automatic},
   ImageSizeRaw->{492., 25.2},
   PlotRange->{{0, 492.}, {0, 25.2}}]], "Input",ExpressionUUID->
  "b9509b9e-e41b-4689-b17a-65a7c63ff3bd"],
 StyleBox["\n\:0417\:0430\:0434\:0430\:043d\:0438\:0435 1. ",
  FontSize->10]
}], "Text",
 CellChangeTimes->{{3.8107092945099273`*^9, 3.8107093011082397`*^9}, {
  3.811143931228716*^9, 3.81114396500235*^9}, {3.811144014648562*^9, 
  3.8111440733154364`*^9}, {3.8143075239620028`*^9, 
  3.814307611731333*^9}},ExpressionUUID->"9009db20-d03e-49a5-8506-\
e3a3f1ae3bd2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], "=", 
  RowBox[{
   RowBox[{"\[Not]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[Not]", 
       RowBox[{"(", 
        RowBox[{"x", "\[And]", 
         RowBox[{"\[Not]", "y"}]}], ")"}]}], "\[Or]", 
      RowBox[{"\[Not]", 
       RowBox[{"(", 
        RowBox[{"y", "\[Or]", "z"}], ")"}]}]}], ")"}]}], "\[Or]", 
   RowBox[{"\[Not]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[Not]", "x"}], "\[Or]", 
      RowBox[{"\[Not]", 
       RowBox[{"(", 
        RowBox[{"y", "\[Implies]", "z"}], ")"}]}]}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8143078464431305`*^9, 3.8143079129952245`*^9}, 
   3.8143080507360153`*^9, {3.814308089576188*^9, 3.8143081719280443`*^9}, {
   3.814308362342078*^9, 3.814308450572173*^9}, {3.8143087418567896`*^9, 
   3.814308746734745*^9}, {3.814308808768064*^9, 3.8143088812845354`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"6f8ccb60-a2fc-45ec-bb4a-2c5ee029778d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"!", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"x", "&&", 
        RowBox[{"!", "y"}]}], ")"}]}], "||", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"y", "||", "z"}], ")"}]}]}], ")"}]}], "||", 
  RowBox[{"!", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"!", "x"}], "||", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"y", "\[Implies]", "z"}], ")"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.8143089037661095`*^9, {3.8150074928484683`*^9, 3.8150075008330984`*^9}},
 CellLabel->"Out[4]=",ExpressionUUID->"be687dda-c6a4-4d1d-8d59-76f15627562e"]
}, Open  ]],

Cell["\:0417\:0430\:0434\:0430\:043d\:0438\:0435 2", "Text",
 CellChangeTimes->{{3.8143104806250362`*^9, 
  3.814310494584675*^9}},ExpressionUUID->"042d53e5-56f8-41ee-809b-\
e54b70d3cb26"],

Cell[BoxData[
 RowBox[{"M", ":=", 
  RowBox[{"Boole", "[", 
   RowBox[{"BooleanTable", "[", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z", ",", 
      RowBox[{"f", "[", 
       RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], "}"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8143090686402082`*^9, 3.8143090786535215`*^9}, {
  3.814309182934395*^9, 3.8143092030913105`*^9}, {3.8143092483293805`*^9, 
  3.814309291309021*^9}, {3.8143093289194803`*^9, 3.8143093402673435`*^9}, {
  3.8143093729241323`*^9, 3.8143093787020473`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"20829e56-b6ee-46d9-8bc7-21956ff5c570"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{"M", ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\"", ",", "\"\<f\>\""}], 
       "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8143093532031846`*^9, 3.8143094796741333`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"85dabf94-fd8b-4f2a-8909-0782b7a50f71"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"x\"\>",
       HoldForm], 
      TagBox["\<\"y\"\>",
       HoldForm], 
      TagBox["\<\"z\"\>",
       HoldForm], 
      TagBox["\<\"f\"\>",
       HoldForm]},
     {
      TagBox[
       StyleBox["\<\"\[Null]\"\>",
        ShowStringCharacters->False],
       StyleForm[#, ShowStringCharacters -> False]& ], "1", "1", "1", "1"},
     {
      TagBox[
       StyleBox["\<\"\[Null]\"\>",
        ShowStringCharacters->False],
       StyleForm[#, ShowStringCharacters -> False]& ], "1", "1", "0", "0"},
     {
      TagBox[
       StyleBox["\<\"\[Null]\"\>",
        ShowStringCharacters->False],
       StyleForm[#, ShowStringCharacters -> False]& ], "1", "0", "1", "1"},
     {
      TagBox[
       StyleBox["\<\"\[Null]\"\>",
        ShowStringCharacters->False],
       StyleForm[#, ShowStringCharacters -> False]& ], "1", "0", "0", "1"},
     {
      TagBox[
       StyleBox["\<\"\[Null]\"\>",
        ShowStringCharacters->False],
       StyleForm[#, ShowStringCharacters -> False]& ], "0", "1", "1", "0"},
     {
      TagBox[
       StyleBox["\<\"\[Null]\"\>",
        ShowStringCharacters->False],
       StyleForm[#, ShowStringCharacters -> False]& ], "0", "1", "0", "0"},
     {
      TagBox[
       StyleBox["\<\"\[Null]\"\>",
        ShowStringCharacters->False],
       StyleForm[#, ShowStringCharacters -> False]& ], "0", "0", "1", "0"},
     {
      TagBox[
       StyleBox["\<\"\[Null]\"\>",
        ShowStringCharacters->False],
       StyleForm[#, ShowStringCharacters -> False]& ], "0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, 
      "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, TableHeadings -> {{}, {"x", "y", "z", "f"}}]]]], "Output",
 CellChangeTimes->{{3.8143093820441523`*^9, 3.814309390431514*^9}, 
   3.8143094867768183`*^9},
 CellLabel->
  "Out[8]//TableForm=",ExpressionUUID->"295336c7-d1f3-4653-8e0d-1568ce3eee02"]
}, Open  ]],

Cell["\:0417\:0430\:0434\:0430\:043d\:0438\:0435 3", "Text",
 CellChangeTimes->{{3.8143104806250362`*^9, 3.814310494584675*^9}, {
  3.8143105361166487`*^9, 
  3.814310536448761*^9}},ExpressionUUID->"bdd1b230-78ec-4eba-911f-\
01ccfbb2e9dc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"X1", "=", "0"}], ";", " ", 
  RowBox[{"Y1", "=", "0"}], ";", " ", 
  RowBox[{"Z1", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<", "8"}], ",", 
   RowBox[{"i", "++"}], ",", " ", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"j", "=", 
      RowBox[{"i", "+", "1"}]}], ",", " ", 
     RowBox[{"j", "<", "9"}], ",", " ", 
     RowBox[{"j", "++"}], ",", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"And", "[", 
        RowBox[{
         RowBox[{"X1", "\[Equal]", "0"}], ",", " ", 
         RowBox[{
          RowBox[{"M", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}], "\[NotEqual]", 
          RowBox[{"M", "[", 
           RowBox[{"[", 
            RowBox[{"j", ",", "1"}], "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"M", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2"}], "]"}], "]"}], "\[Equal]", 
          RowBox[{"M", "[", 
           RowBox[{"[", 
            RowBox[{"j", ",", "2"}], "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"M", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "3"}], "]"}], "]"}], "\[Equal]", 
          RowBox[{"M", "[", 
           RowBox[{"[", 
            RowBox[{"j", ",", "3"}], "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"M", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "4"}], "]"}], "]"}], "\[NotEqual]", 
          RowBox[{"M", "[", 
           RowBox[{"[", 
            RowBox[{"j", ",", "4"}], "]"}], "]"}]}]}], "]"}], ",", 
       RowBox[{"X1", "=", "1"}]}], "]"}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<", "8"}], ",", 
   RowBox[{"i", "++"}], ",", " ", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"j", "=", 
      RowBox[{"i", "+", "1"}]}], ",", " ", 
     RowBox[{"j", "<", "9"}], ",", " ", 
     RowBox[{"j", "++"}], ",", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"And", "[", 
        RowBox[{
         RowBox[{"Y1", "\[Equal]", "0"}], ",", " ", 
         RowBox[{
          RowBox[{"M", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}], "==", 
          RowBox[{"M", "[", 
           RowBox[{"[", 
            RowBox[{"j", ",", "1"}], "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"M", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2"}], "]"}], "]"}], "\[NotEqual]", 
          RowBox[{"M", "[", 
           RowBox[{"[", 
            RowBox[{"j", ",", "2"}], "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"M", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "3"}], "]"}], "]"}], "\[Equal]", 
          RowBox[{"M", "[", 
           RowBox[{"[", 
            RowBox[{"j", ",", "3"}], "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"M", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "4"}], "]"}], "]"}], "\[NotEqual]", 
          RowBox[{"M", "[", 
           RowBox[{"[", 
            RowBox[{"j", ",", "4"}], "]"}], "]"}]}]}], "]"}], ",", 
       RowBox[{"Y1", "=", "1"}]}], "]"}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "<", "8"}], ",", 
    RowBox[{"i", "++"}], ",", " ", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"j", "=", 
       RowBox[{"i", "+", "1"}]}], ",", " ", 
      RowBox[{"j", "<", "9"}], ",", " ", 
      RowBox[{"j", "++"}], ",", " ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"And", "[", 
         RowBox[{
          RowBox[{"Z1", "\[Equal]", "0"}], ",", " ", 
          RowBox[{
           RowBox[{"M", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], "==", 
           RowBox[{"M", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "1"}], "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"M", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "2"}], "]"}], "]"}], "\[Equal]", 
           RowBox[{"M", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "2"}], "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"M", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "3"}], "]"}], "]"}], "\[NotEqual]", 
           RowBox[{"M", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "3"}], "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"M", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "4"}], "]"}], "]"}], "\[NotEqual]", 
           RowBox[{"M", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "4"}], "]"}], "]"}]}]}], "]"}], ",", 
        RowBox[{"Z1", "=", "1"}]}], "]"}]}], "]"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"X1", "\[Equal]", "1"}], ",", " ", 
   RowBox[{
   "Print", "[", 
    "\"\<x-\:0441\:0443\:0449\:0435\:0441\:0442\:0432\:0435\:043d\:043d\:0430\
\:044f \:043f\:0435\:0440\:0435\:043c\:0435\:043d\:043d\:0430\:044f\>\"", 
    "]"}], ",", 
   RowBox[{
   "Print", "[", 
    "\"\<x-\:0444\:0438\:043a\:0442\:0438\:0432\:043d\:0430\:044f \
\:043f\:0435\:0440\:0435\:043c\:0435\:043d\:043d\:0430\:044f\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"Y1", "\[Equal]", "1"}], ",", " ", 
   RowBox[{
   "Print", "[", 
    "\"\<y-\:0441\:0443\:0449\:0435\:0441\:0442\:0432\:0435\:043d\:043d\:0430\
\:044f \:043f\:0435\:0440\:0435\:043c\:0435\:043d\:043d\:0430\:044f\>\"", 
    "]"}], ",", 
   RowBox[{
   "Print", "[", 
    "\"\<y-\:0444\:0438\:043a\:0442\:0438\:0432\:043d\:0430\:044f \
\:043f\:0435\:0440\:0435\:043c\:0435\:043d\:043d\:0430\:044f\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"Z1", "\[Equal]", "1"}], ",", " ", 
   RowBox[{
   "Print", "[", 
    "\"\<z-\:0441\:0443\:0449\:0435\:0441\:0442\:0432\:0435\:043d\:043d\:0430\
\:044f \:043f\:0435\:0440\:0435\:043c\:0435\:043d\:043d\:0430\:044f\>\"", 
    "]"}], ",", 
   RowBox[{
   "Print", "[", 
    "\"\<z-\:0444\:0438\:043a\:0442\:0438\:0432\:043d\:0430\:044f \
\:043f\:0435\:0440\:0435\:043c\:0435\:043d\:043d\:0430\:044f\>\"", "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.815007253097088*^9, 3.815007365423651*^9}, {
  3.815007473186013*^9, 3.815007776662818*^9}, {3.8150078897527328`*^9, 
  3.8150080509948974`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"e2c1776f-d4c0-45b4-a875-2b837fee183d"],

Cell[CellGroupData[{

Cell[BoxData["\<\"x-\:0441\:0443\:0449\:0435\:0441\:0442\:0432\:0435\:043d\
\:043d\:0430\:044f \:043f\:0435\:0440\:0435\:043c\:0435\:043d\:043d\:0430\
\:044f\"\>"], "Print",
 CellChangeTimes->{3.81500805336456*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"3ce12d49-9d22-401d-ba90-f90903d52d3c"],

Cell[BoxData["\<\"y-\:0441\:0443\:0449\:0435\:0441\:0442\:0432\:0435\:043d\
\:043d\:0430\:044f \:043f\:0435\:0440\:0435\:043c\:0435\:043d\:043d\:0430\
\:044f\"\>"], "Print",
 CellChangeTimes->{3.815008053371541*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"a7b08952-ea4a-43bb-9a2c-de5b6625f3dd"],

Cell[BoxData["\<\"z-\:0441\:0443\:0449\:0435\:0441\:0442\:0432\:0435\:043d\
\:043d\:0430\:044f \:043f\:0435\:0440\:0435\:043c\:0435\:043d\:043d\:0430\
\:044f\"\>"], "Print",
 CellChangeTimes->{3.8150080533775597`*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"20e87070-b905-476f-bd57-6d67bdaac8ee"]
}, Open  ]]
}, Open  ]],

Cell["\:0417\:0430\:0434\:0430\:043d\:0438\:0435 4", "Text",
 CellChangeTimes->{{3.8143104806250362`*^9, 3.814310494584675*^9}, {
  3.8143105361166487`*^9, 
  3.814310552256503*^9}},ExpressionUUID->"e7de47ce-e5b8-4b9b-b46e-\
0648c6b62d66"],

Cell[BoxData[
 RowBox[{"BooleanConvert", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", "\"\<]\>"}]}]], "Input",
 CellChangeTimes->{{3.814319074353199*^9, 
  3.8143190927779613`*^9}},ExpressionUUID->"9202e569-1f17-45c9-b75e-\
bf28453c08f3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BooleanConvert", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\"\<NAND\>\"", ",", "\"\<AND\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.814310595607617*^9, 3.814310604570657*^9}, {
  3.814312150349039*^9, 3.8143122436076946`*^9}, {3.814319044443158*^9, 
  3.8143190664852324`*^9}, {3.814319238052563*^9, 3.8143192424059653`*^9}, {
  3.8143192891071196`*^9, 3.814319290213127*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"92c44767-b9d8-4575-acaf-64dc8d1c8399"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"x", "\[Nand]", 
      RowBox[{"!", "y"}]}], ")"}], "\[Nand]", 
    RowBox[{"(", 
     RowBox[{"x", "\[Nand]", "z"}], ")"}]}], ",", 
   RowBox[{"x", "&&", 
    RowBox[{"!", 
     RowBox[{"(", 
      RowBox[{"y", "&&", 
       RowBox[{"!", "z"}]}], ")"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8143121951233034`*^9, 3.8143122453750024`*^9}, 
   3.814319290857437*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"ae1da20a-04bb-40cb-9f59-221aa09d7d27"]
}, Open  ]],

Cell["\:0417\:0430\:0434\:0430\:043d\:0438\:0435 5", "Text",
 CellChangeTimes->{{3.8143104806250362`*^9, 3.814310494584675*^9}, {
  3.8143105361166487`*^9, 3.814310552256503*^9}, {3.8143122669694276`*^9, 
  3.814312267305346*^9}},ExpressionUUID->"bccfaf0b-2963-48bc-9018-\
23d243af71aa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BooleanConvert", "[", 
  RowBox[{
   RowBox[{"\[Not]", 
    RowBox[{"f", "[", 
     RowBox[{
      RowBox[{"\[Not]", "x"}], ",", 
      RowBox[{"\[Not]", "y"}], ",", 
      RowBox[{"\[Not]", "z"}]}], "]"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\"\<NAND\>\"", ",", "\"\<AND\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.814312329232836*^9, 3.8143123503074994`*^9}, {
  3.8150082661179333`*^9, 3.81500827846292*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"fbb90c89-e5c7-4451-9595-448a70b86e75"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"!", "x"}], "\[Nand]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"!", "y"}], "\[Nand]", "z"}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"!", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"!", "x"}], "&&", "y"}], ")"}]}], "&&", 
    RowBox[{"!", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"!", "x"}], "&&", 
       RowBox[{"!", "z"}]}], ")"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.8143123528496685`*^9, 3.815008282835225*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"95791d4d-261a-4351-a139-a57719bd15de"]
}, Open  ]],

Cell["\:0417\:0430\:0434\:0430\:043d\:0438\:0435 6", "Text",
 CellChangeTimes->{{3.8143104806250362`*^9, 3.814310494584675*^9}, {
  3.8143105361166487`*^9, 3.814310552256503*^9}, {3.8143122669694276`*^9, 
  3.814312267305346*^9}, {3.8143123860608873`*^9, 
  3.814312386632395*^9}},ExpressionUUID->"1ef7ab9a-ee71-4b23-a14a-\
63383fb065ae"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Bool", "=", "0"}], ";"}]], "Input",
 CellChangeTimes->{{3.8150108122414894`*^9, 
  3.8150108211945457`*^9}},ExpressionUUID->"1f701690-218b-4ddc-9e0f-\
b4ebef766a2a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<", "9"}], ",", 
   RowBox[{"i", "++"}], ",", " ", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"j", "=", "i"}], ",", " ", 
     RowBox[{"j", "\[LessEqual]", "i"}], ",", " ", 
     RowBox[{"j", "++"}], ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"M", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "4"}], "]"}], "]"}], "\[LessEqual]", "  ", 
        RowBox[{"M", "[", 
         RowBox[{"[", 
          RowBox[{"j", ",", "4"}], "]"}], "]"}]}], ",", " ", 
       RowBox[{"Bool", "=", "1"}]}], "]"}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"Bool", "\[Equal]", "0"}], ",", "  ", 
   RowBox[{
   "Print", "[", 
    "\"\<\:0424\:0443\:043d\:043a\:0446\:0438\:044f \:043c\:043e\:043d\:043e\
\:0442\:043e\:043d\:043d\:0430\>\"", "]"}], ",", " ", 
   RowBox[{
   "Print", "[", 
    "\"\<\:0424\:0443\:043d\:043a\:0446\:0438\:044f \:043d\:0435 \:044f\:0432\
\:043b\:044f\:0435\:0442\:0441\:044f \:043c\:043e\:043d\:043e\:0442\:043e\
\:043d\:043d\:043e\:0439\>\"", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8150100014470177`*^9, 3.8150100087634597`*^9}, {
  3.8150100850362654`*^9, 3.8150101486104164`*^9}, {3.815010213964591*^9, 
  3.815010222548633*^9}, {3.8150104325891285`*^9, 3.815010435948142*^9}, {
  3.8150106473848248`*^9, 3.815010675922017*^9}, {3.815010781414937*^9, 
  3.815010940723866*^9}, {3.8150111236769323`*^9, 3.815011136097686*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"a0e6bfa3-e1d5-4dba-83ed-b382b0061cb8"],

Cell[BoxData["\<\"\:0424\:0443\:043d\:043a\:0446\:0438\:044f \:043d\:0435 \
\:044f\:0432\:043b\:044f\:0435\:0442\:0441\:044f \:043c\:043e\:043d\:043e\
\:0442\:043e\:043d\:043d\:043e\:0439\"\>"], "Print",
 CellChangeTimes->{{3.815010915625015*^9, 3.815010941860854*^9}, 
   3.8150111381661506`*^9},
 CellLabel->
  "During evaluation of \
In[32]:=",ExpressionUUID->"e7a5ee07-5b47-4d6f-af72-4ba7a6db910b"]
}, Open  ]],

Cell["\:0417\:0430\:0434\:0430\:043d\:0438\:0435 7", "Text",
 CellChangeTimes->{{3.8143104806250362`*^9, 3.814310494584675*^9}, {
  3.8143105361166487`*^9, 3.814310552256503*^9}, {3.8143122669694276`*^9, 
  3.814312267305346*^9}, {3.8143123916680813`*^9, 
  3.8143123922084885`*^9}},ExpressionUUID->"7b34c101-36ae-415c-b087-\
208f8e2479fb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"M1", ":=", 
    RowBox[{"{", "}"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
    RowBox[{"i", " ", "<=", " ", "8"}], ",", " ", 
    RowBox[{"i", "++"}], ",", "\n", "       ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"M", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "4"}], "]"}], "]"}], " ", "==", " ", "1"}], 
      ",", " ", 
      RowBox[{"M1", "=", 
       RowBox[{"Join", "[", 
        RowBox[{"M1", ",", 
         RowBox[{"List", "[", 
          RowBox[{"M", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "]"}]}]}], "]"}]}], "]"}],
   " "}]}], "Input",
 CellChangeTimes->{{3.8150111631034555`*^9, 3.8150111948077087`*^9}, 
   3.8150118594917107`*^9, {3.8150119101043158`*^9, 
   3.815011976458572*^9}},ExpressionUUID->"79e8d027-56e9-4b27-85f7-\
c15df09c816e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"M1", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.815011864324751*^9, 3.8150118783592176`*^9}, {
  3.8150119455572176`*^9, 3.81501194565201*^9}, {3.8150119837640324`*^9, 
  3.8150119838946857`*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"7271c166-4301-4e42-b8bd-4a1f60e3a3ab"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "1", "1", "1"},
     {"1", "0", "1", "1"},
     {"1", "0", "0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.815011878970581*^9, 3.815011985947194*^9},
 CellLabel->
  "Out[44]//MatrixForm=",ExpressionUUID->"98d876ca-3599-43ab-9200-\
cb235652351a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"BooleanConvert", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", "\"\<DNF\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.815012027220807*^9, 3.815012042867959*^9}, {
  3.8150120739219065`*^9, 3.815012084184459*^9}, {3.8150126524194045`*^9, 
  3.8150126531234846`*^9}},ExpressionUUID->"b2d63d79-69d0-4762-abdb-\
0e41c83577a9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SDNF", "[", 
   RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"x", "\[And]", 
     RowBox[{"\[Not]", "y"}], "\[And]", "z"}], ")"}], "\[Or]", 
   RowBox[{"(", 
    RowBox[{"x", "\[And]", 
     RowBox[{"\[Not]", "y"}], "\[And]", 
     RowBox[{"\[Not]", "z"}]}], ")"}], "\[Or]", 
   RowBox[{"(", 
    RowBox[{"x", "\[And]", "y", "\[And]", "z"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.815012092639844*^9, 3.815012104751452*^9}, {
  3.8150124754876137`*^9, 3.8150125063989415`*^9}, {3.8150125690776434`*^9, 
  3.8150126389623585`*^9}},ExpressionUUID->"81790911-65db-4d19-9efb-\
fc66415f05c3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"M0", ":=", 
  RowBox[{"{", "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
   RowBox[{"i", " ", "<=", " ", "8"}], ",", " ", 
   RowBox[{"i", "++"}], ",", "\n", "       ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"M", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", " ", "4"}], "]"}], "]"}], " ", "!=", " ", "1"}], 
     ",", " ", 
     RowBox[{"M0", "=", 
      RowBox[{"Join", "[", 
       RowBox[{"M0", ",", 
        RowBox[{"List", "[", 
         RowBox[{"M", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "]"}]}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"M0", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.8150126647543755`*^9, 3.815012711373695*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"18b2d534-9bb0-4096-8c1a-696ba001b473"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "1", "0", "0"},
     {"0", "1", "1", "0"},
     {"0", "1", "0", "0"},
     {"0", "0", "1", "0"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.815012714241025*^9},
 CellLabel->
  "Out[50]//MatrixForm=",ExpressionUUID->"1e9271b9-003a-4339-93f3-\
ad23c8c15bee"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"SKNF", "[", 
   RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"\[Not]", "x"}], "\[Or]", 
     RowBox[{"\[Not]", "y"}], "\[Or]", "z"}], ")"}], "\[And]", 
   RowBox[{"(", 
    RowBox[{"x", "\[Or]", 
     RowBox[{"\[Not]", "y"}], "\[Or]", 
     RowBox[{"\[Not]", "z"}]}], ")"}], "\[And]", 
   RowBox[{"(", 
    RowBox[{"x", "\[Or]", 
     RowBox[{"\[Not]", "y"}], "\[Or]", "z"}], ")"}], "\[And]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"\[Not]", "x"}], "\[Or]", 
     RowBox[{"\[Not]", "y"}], "\[Or]", "z"}], ")"}], "\[And]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"\[Not]", "x"}], "\[Or]", 
     RowBox[{"\[Not]", "y"}], "\[Or]", 
     RowBox[{"\[Not]", "z"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.8150127305733423`*^9, 
  3.81501282870785*^9}},ExpressionUUID->"8e1a7fde-94cf-46ad-b283-\
600922e1b416"],

Cell["\:0417\:0430\:0434\:0430\:043d\:0438\:0435 8", "Text",
 CellChangeTimes->{{3.8143104806250362`*^9, 3.814310494584675*^9}, {
  3.8143105361166487`*^9, 3.814310552256503*^9}, {3.8143122669694276`*^9, 
  3.814312267305346*^9}, {3.8143123916680813`*^9, 3.8143123922084885`*^9}, {
  3.814312735978489*^9, 
  3.8143127451130686`*^9}},ExpressionUUID->"2cc68e4b-d99f-43b2-b7a7-\
f082b37f069a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SDNF", "[", 
   RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"x", "\[And]", 
     RowBox[{"\[Not]", "y"}], "\[And]", "z"}], ")"}], "\[Or]", 
   RowBox[{"(", 
    RowBox[{"x", "\[And]", 
     RowBox[{"\[Not]", "y"}], "\[And]", 
     RowBox[{"\[Not]", "z"}]}], ")"}], "\[Or]", 
   RowBox[{"(", 
    RowBox[{"x", "\[And]", "y", "\[And]", "z"}], ")"}]}]}]], "Input",Expressio\
nUUID->"6307be93-ce9a-4019-92f7-89cd5c9bb2c2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SDNF", "[", 
   RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"x", "\[And]", 
     RowBox[{"\[Not]", "y"}], "\[And]", "z"}], ")"}], "\[Xor]", 
   RowBox[{"(", 
    RowBox[{"x", "\[And]", 
     RowBox[{"\[Not]", "y"}], "\[And]", 
     RowBox[{"\[Not]", "z"}]}], ")"}], "\[Xor]", 
   RowBox[{"(", 
    RowBox[{"x", "\[And]", "y", "\[And]", "z"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.815013123577536*^9, 
  3.815013125367716*^9}},ExpressionUUID->"0325cb62-e17c-40b6-b0e6-\
99cfbbfc5b67"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SDNF", "[", 
   RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"x", "\[And]", 
     RowBox[{"(", 
      RowBox[{"y", "\[Xor]", "1"}], ")"}], "\[And]", "z"}], ")"}], "\[Xor]", 
   RowBox[{"(", 
    RowBox[{"x", "\[And]", 
     RowBox[{"(", 
      RowBox[{"y", "\[Xor]", "1"}], ")"}], "\[And]", 
     RowBox[{"(", 
      RowBox[{"z", "\[Xor]", "1"}], ")"}]}], ")"}], "\[Xor]", 
   RowBox[{"(", 
    RowBox[{"x", "\[And]", "y", "\[And]", "z"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.815013156524172*^9, 
  3.8150131826124*^9}},ExpressionUUID->"03f8b3c4-2524-44b7-9b14-f4066c509c54"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SDNF", "[", 
   RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"x", "\[And]", "y", "\[And]", "z"}], "\[Xor]", 
   RowBox[{"x", "\[And]", "z"}], "\[Xor]", 
   RowBox[{"x", "\[And]", "y", "\[And]", "z"}], "\[Xor]", 
   RowBox[{"x", "\[And]", "y"}], "\[Xor]", 
   RowBox[{"x", "\[And]", "z"}], "\[Xor]", 
   RowBox[{"x", "\[And]", "y", "\[And]", "z"}]}]}]], "Input",
 CellChangeTimes->{{3.815013643465946*^9, 
  3.8150136757496033`*^9}},ExpressionUUID->"971df709-0ac2-449d-a366-\
4731a0c26ecf"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SDNF", "[", 
    RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"x", "\[And]", "y", "\[And]", "z"}], "\[Xor]", 
    RowBox[{"x", "\[And]", "z"}], "\[Xor]", 
    RowBox[{"x", "\[And]", "y"}]}]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.8150137509748*^9, 
  3.8150137795703225`*^9}},ExpressionUUID->"5fbfc9d0-688e-4652-af1b-\
8c086b6b1307"],

Cell["\:041f\:043e\:043b\:0438\:043d\:043e\:043c \:0416\:0435\:0433\:0430\
\:043b\:043a\:0438\:043d\:0430 \:0438\:043c\:0435\:0435\:0442 \:0432\:0438\
\:0434 : ", "Text",
 CellChangeTimes->{{3.815013787838208*^9, 
  3.815013810931445*^9}},ExpressionUUID->"0a5e7908-f4bd-494c-8597-\
cc912989e972"],

Cell[BoxData[
 RowBox[{"xyz", 
  FormBox["\[CirclePlus]",
   TraditionalForm], "xz", 
  FormBox["\[CirclePlus]",
   TraditionalForm], "xy"}]], "Input",
 CellChangeTimes->{{3.8150138248681726`*^9, 
  3.815013867351548*^9}},ExpressionUUID->"f3735714-f357-4a71-a382-\
1090a7e1771d"]
},
WindowSize->{573., 574.8},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>1. Inherited,
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (June 9, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"75b15e79-84d1-4db6-818b-816d4d6c60fd"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 312, 5, 53, "Text",ExpressionUUID->"7552e046-f15e-4263-8f0c-e1926caec1c0"],
Cell[873, 27, 44381, 742, 294, "Text",ExpressionUUID->"9009db20-d03e-49a5-8506-e3a3f1ae3bd2"],
Cell[CellGroupData[{
Cell[45279, 773, 1000, 26, 28, "Input",ExpressionUUID->"6f8ccb60-a2fc-45ec-bb4a-2c5ee029778d"],
Cell[46282, 801, 646, 21, 32, "Output",ExpressionUUID->"be687dda-c6a4-4d1d-8d59-76f15627562e"]
}, Open  ]],
Cell[46943, 825, 188, 3, 35, "Text",ExpressionUUID->"042d53e5-56f8-41ee-809b-e54b70d3cb26"],
Cell[47134, 830, 620, 13, 44, "Input",ExpressionUUID->"20829e56-b6ee-46d9-8bc7-21956ff5c570"],
Cell[CellGroupData[{
Cell[47779, 847, 471, 12, 44, "Input",ExpressionUUID->"85dabf94-fd8b-4f2a-8909-0782b7a50f71"],
Cell[48253, 861, 2454, 73, 181, "Output",ExpressionUUID->"295336c7-d1f3-4653-8e0d-1568ce3eee02"]
}, Open  ]],
Cell[50722, 937, 239, 4, 35, "Text",ExpressionUUID->"bdd1b230-78ec-4eba-911f-01ccfbb2e9dc"],
Cell[CellGroupData[{
Cell[50986, 945, 6592, 186, 647, "Input",ExpressionUUID->"e2c1776f-d4c0-45b4-a875-2b837fee183d"],
Cell[CellGroupData[{
Cell[57603, 1135, 319, 6, 21, "Print",ExpressionUUID->"3ce12d49-9d22-401d-ba90-f90903d52d3c"],
Cell[57925, 1143, 320, 6, 21, "Print",ExpressionUUID->"a7b08952-ea4a-43bb-9a2c-de5b6625f3dd"],
Cell[58248, 1151, 322, 6, 21, "Print",ExpressionUUID->"20e87070-b905-476f-bd57-6d67bdaac8ee"]
}, Open  ]]
}, Open  ]],
Cell[58597, 1161, 239, 4, 35, "Text",ExpressionUUID->"e7de47ce-e5b8-4b9b-b46e-0648c6b62d66"],
Cell[58839, 1167, 283, 7, 44, "Input",ExpressionUUID->"9202e569-1f17-45c9-b75e-bf28453c08f3"],
Cell[CellGroupData[{
Cell[59147, 1178, 575, 11, 44, "Input",ExpressionUUID->"92c44767-b9d8-4575-acaf-64dc8d1c8399"],
Cell[59725, 1191, 536, 16, 32, "Output",ExpressionUUID->"ae1da20a-04bb-40cb-9f59-221aa09d7d27"]
}, Open  ]],
Cell[60276, 1210, 287, 4, 35, "Text",ExpressionUUID->"bccfaf0b-2963-48bc-9018-23d243af71aa"],
Cell[CellGroupData[{
Cell[60588, 1218, 533, 13, 44, "Input",ExpressionUUID->"fbb90c89-e5c7-4451-9595-448a70b86e75"],
Cell[61124, 1233, 589, 19, 32, "Output",ExpressionUUID->"95791d4d-261a-4351-a139-a57719bd15de"]
}, Open  ]],
Cell[61728, 1255, 338, 5, 35, "Text",ExpressionUUID->"1ef7ab9a-ee71-4b23-a14a-63383fb065ae"],
Cell[62069, 1262, 200, 5, 28, "Input",ExpressionUUID->"1f701690-218b-4ddc-9e0f-b4ebef766a2a"],
Cell[CellGroupData[{
Cell[62294, 1271, 1625, 39, 152, "Input",ExpressionUUID->"a0e6bfa3-e1d5-4dba-83ed-b382b0061cb8"],
Cell[63922, 1312, 402, 7, 21, "Print",ExpressionUUID->"e7a5ee07-5b47-4d6f-af72-4ba7a6db910b"]
}, Open  ]],
Cell[64339, 1322, 340, 5, 35, "Text",ExpressionUUID->"7b34c101-36ae-415c-b087-208f8e2479fb"],
Cell[64682, 1329, 962, 28, 99, "Input",ExpressionUUID->"79e8d027-56e9-4b27-85f7-c15df09c816e"],
Cell[CellGroupData[{
Cell[65669, 1361, 310, 5, 44, "Input",ExpressionUUID->"7271c166-4301-4e42-b8bd-4a1f60e3a3ab"],
Cell[65982, 1368, 689, 20, 77, "Output",ExpressionUUID->"98d876ca-3599-43ab-9200-cb235652351a"]
}, Open  ]],
Cell[66686, 1391, 394, 9, 44, "Input",ExpressionUUID->"b2d63d79-69d0-4762-abdb-0e41c83577a9"],
Cell[67083, 1402, 673, 17, 28, "Input",ExpressionUUID->"81790911-65db-4d19-9efb-fc66415f05c3"],
Cell[CellGroupData[{
Cell[67781, 1423, 889, 24, 135, "Input",ExpressionUUID->"18b2d534-9bb0-4096-8c1a-696ba001b473"],
Cell[68673, 1449, 721, 22, 112, "Output",ExpressionUUID->"1e9271b9-003a-4339-93f3-ad23c8c15bee"]
}, Open  ]],
Cell[69409, 1474, 913, 27, 49, "Input",ExpressionUUID->"8e1a7fde-94cf-46ad-b283-600922e1b416"],
Cell[70325, 1503, 391, 6, 35, "Text",ExpressionUUID->"2cc68e4b-d99f-43b2-b7a7-f082b37f069a"],
Cell[70719, 1511, 501, 14, 28, "Input",ExpressionUUID->"6307be93-ce9a-4019-92f7-89cd5c9bb2c2"],
Cell[71223, 1527, 572, 16, 28, "Input",ExpressionUUID->"0325cb62-e17c-40b6-b0e6-99cfbbfc5b67"],
Cell[71798, 1545, 664, 18, 49, "Input",ExpressionUUID->"03f8b3c4-2524-44b7-9b14-f4066c509c54"],
Cell[72465, 1565, 553, 13, 28, "Input",ExpressionUUID->"971df709-0ac2-449d-a366-4731a0c26ecf"],
Cell[73021, 1580, 431, 11, 49, "Input",ExpressionUUID->"5fbfc9d0-688e-4652-af1b-8c086b6b1307"],
Cell[73455, 1593, 296, 5, 35, "Text",ExpressionUUID->"0a5e7908-f4bd-494c-8597-cc912989e972"],
Cell[73754, 1600, 279, 8, 28, "Input",ExpressionUUID->"f3735714-f357-4a71-a382-1090a7e1771d"]
}
]
*)

